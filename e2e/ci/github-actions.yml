name: Enterprise E2E Testing
on:
  pull_request:
  push:
    branches: [main]

jobs:
  e2e:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # Split tests for parallel execution
        shard: [1, 2, 3, 4]

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: sparktasks_test
        ports:
          - '5432:5432'
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      APP_BASE_URL: http://localhost:3000
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/sparktasks_test
      NODE_ENV: test
      # PR runs: critical path only. Main branch: full suite
      PW_GREP: ${{ github.event_name == 'pull_request' && '@critical' || '' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Validate data contracts
        run: npm run test:data-contracts

      - name: Run E2E tests
        run: npm run e2e -- --shard=${{ matrix.shard }}/4

      - name: Upload test artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-artifacts-shard-${{ matrix.shard }}
          path: |
            test-results/
            playwright-report/
          retention-days: 7

      - name: Upload performance metrics
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: performance-metrics-${{ matrix.shard }}
          path: performance-results.json
          retention-days: 30

  # Nightly comprehensive testing
  nightly:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest

    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
        feature-flag: [enabled, disabled]

    env:
      APP_BASE_URL: http://localhost:3000
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/sparktasks_test
      FEATURE_FLAGS: ${{ matrix.feature-flag }}
      NODE_ENV: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run comprehensive E2E suite
        run: npm run e2e -- --project=${{ matrix.browser }}

      - name: Generate performance report
        run: npm run e2e:perf-report

      - name: Upload comprehensive results
        uses: actions/upload-artifact@v4
        with:
          name: nightly-results-${{ matrix.browser }}-${{ matrix.feature-flag }}
          path: |
            test-results/
            playwright-report/
            performance-report/
